{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmstorageType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS"
      ]
    },
    "vmdiagstorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS"
      ]
    },
    "ADVMName": {
      "type": "string",
      "defaultValue": "ContosoAzADDS1",
      "minLength": 1
    },
    "WebVMName": {
      "type": "string",
      "defaultValue": "ContosoWeb1",
      "minLength": 1
    },
    "SQLVMName": {
      "type": "string",
      "defaultValue": "ContosoSQLSrv1",
      "minLength": 1
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "demouser",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Demo@pass123",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "ContosoRetail.com",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created"
      }
    },
    "ADInstallscriptUrl": {
      "type": "string",
      "metadata": {
        "description": "script to execute"
      },
      "defaultValue": "https://raw.githubusercontent.com/opsgility/oms-evergreen/master/script-extensions/deploy-ad.ps1"
    },
    "DomainJoinscriptUrl": {
      "type": "string",
      "metadata": {
        "description": "script to execute"
      },
      "defaultValue": "https://raw.githubusercontent.com/opsgility/oms-evergreen/master/script-extensions/domain-join.ps1"
    },
    "CloudShopDownloadUrl": {
      "type": "string",
      "metadata": {
        "description": "Zip that contains cloud shop sample"
      },
      "defaultValue": "\"https://raw.githubusercontent.com/opsgility/oms-evergreen/master/CloudShop/CloudShop.zip"
    },
    "CloudShopDBDownloadUrl": {
      "type": "string",
      "metadata": {
        "description": "Zip that contains cloud shop sample"
      },
      "defaultValue": "http://opsgilitytraining.blob.core.windows.net/public/AdventureWorks2012.bak"
    },
    "CloudShopInstallscriptUrl": {
      "type": "string",
      "metadata": {
        "description": "script to execute"
      },
      "defaultValue": "https://raw.githubusercontent.com/opsgility/oms-evergreen/master/script-extensions/deploy-cloudshop.ps1"
    },
    "CloudShopDBInstallscriptUrl": {
      "type": "string",
      "metadata": {
        "description": "script to execute"
      },
      "defaultValue": "https://raw.githubusercontent.com/opsgility/oms-evergreen/master/script-extensions/deploy-cloudshop-db.ps1"
    },
    "ContosoAzLnx1Name": {
      "type": "string",
      "defaultValue": "ContosoAzLnx1",
      "minLength": 1
    },
    "ContosoAzLnx1UbuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.2-LTS"
      ]
    }
  },
  "variables": {
    "vmstorageName": "[concat('chqdisks', uniqueString(resourceGroup().id))]",
    "diagstorageName": "[concat('chqdiag', uniqueString(resourceGroup().id))]",
    "diagstorageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagstorageName'))]",
    "WindowsOSVersion": "2016-Datacenter",
    "WindowsImagePublisher": "MicrosoftWindowsServer",
    "WindowsImageOffer": "WindowsServer",
    "ADVMOSDiskName": "ADVMOSDisk",
    "ADVMVmSize": "Standard_DS1_v2",
    "ADVMVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'ContosoAzureVNET')]",
    "ADVMSubnetRef": "[concat(variables('ADVMVnetID'), '/subnets/ContosoAzureSubnet')]",
    "ADVMStorageAccountContainerName": "vhds",
    "ADVMNicName": "[concat(parameters('ADVMName'), 'NetworkInterface')]",
    "WebAvailabilitySetName": "WebAVSet",
    "LinuxAVSet": "ContosoLnxAVSet",
    "WebOSDiskName": "WebOSDisk",
    "WebVmSize": "Standard_DS1_v2",
    "WebVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'ContosoAzureVNET')]",
    "WebSubnetRef": "[concat(variables('WebVnetID'), '/subnets/ContosoAzureSubnet')]",
    "WebStorageAccountContainerName": "vhds",
    "WebNicName": "[concat(parameters('WebVMName'), 'NetworkInterface')]",
    "SQLOSDiskName": "SQLOSDisk",
    "SQLVmSize": "Standard_DS1_v2",
    "SQLVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'ContosoAzureVNET')]",
    "SQLSubnetRef": "[concat(variables('SQLVnetID'), '/subnets/ContosoAzureSubnet')]",
    "SQLStorageAccountContainerName": "vhds",
    "SQLNicName": "[concat(parameters('SQLVMName'), 'NetworkInterface')]",
    "ContosoAzLnx1ImagePublisher": "Canonical",
    "ContosoAzLnxAvailabilitySetName": "ContosoAzLnxAVSet",
    "ContosoAzLnx1ImageOffer": "UbuntuServer",
    "ContosoAzLnx1OSDiskName": "ContosoAzLnx1OSDisk",
    "ContosoAzLnx1VmSize": "Standard_DS2_v2",
    "ContosoAzLnx1VnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'ContosoAzureVNET')]",
    "ContosoAzLnx1SubnetRef": "[concat(variables('ContosoAzLnx1VnetID'), '/subnets/', 'ContosoAzureSubnet')]",
    "ContosoAzLnx1StorageAccountContainerName": "vhds",
    "ContosoAzLnx1NicName": "[concat(parameters('ContosoAzLnx1Name'), 'NetworkInterface')]",
    "InstallADScriptFolder": "CustomScripts",
    "InstallADScriptFileName": "InstallAD.ps1",
    "scriptFolder": ".",
    "ADInstallScriptFileName": "deploy-ad.ps1",
    "ADInstallScriptFileNameParameters": "[concat(' -domain ', parameters('domainName'), ' -password ', parameters('adminPassword'))]",
    "DomainJoinscriptFileName": "domain-join.ps1",
    "DomainJoinscriptParameters": "[concat(' -domain ', parameters('domainName'), ' -user ', parameters('adminUsername'), ' -password ', parameters('adminPassword'))]",
    "CloudShopInstallScriptFileName": "deploy-cloudshop.ps1",
    "CloudShopInstallScriptParameters": "[concat(' -domain ', parameters('domainName'), ' -user ', parameters('adminUsername'), ' -password ', parameters('adminPassword'))]",
    "CloudShopDBInstallScriptFileName": "deploy-cloudshop-db.ps1",
    "CloudShopDBInstallScriptParameters": "[concat(' -domain ', parameters('domainName'), ' -user ', parameters('adminUsername'), ' -password ', parameters('adminPassword'))]",
    "adipName": "adip",
    "webipName": "webip",
    "linuxipName": "linuxip",
    "mabipName": "mabip",
    "sqlipName": "sqlip",
    "availabilitySetName": "ContosoAzADDSAVSet",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
    "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>"
  },
  "resources": [
    {
      "name": "[variables('vmstorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('vmstorageType')]"
      },
      "tags": {
        "displayName": "ContosoHQStorageDisks"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "vmstorage"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('diagstorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('vmdiagstorageType')]"
      },
      "tags": {
        "displayName": "ContosoHQStorageDiagnostics"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "vmstorage"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ContosoAzADDSAVSet"
      },
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "false"
      }
    },
    {
      "name": "[variables('ADVMNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('adipName'))]"
      ],
      "tags": {
        "displayName": "ADVMNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('ADVMSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adipName'))]"
              },
              "privateIPAddress": "10.6.0.4"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('ADVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diagstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('ADVMNicName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "tags": {
        "displayName": "ContosoAzADDS1"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('ADVMVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('ADVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('WindowsImagePublisher')]",
            "offer": "[variables('WindowsImageOffer')]",
            "sku": "[variables('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "ADVMOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('ADVMStorageAccountContainerName'), '/', variables('ADVMOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ADVMNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "InstallAD",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('ADVMName'))]"
          ],
          "tags": {
            "displayName": "InstallAD"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('ADInstallscriptUrl'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('ADInstallScriptFileName'), ' ', variables('ADInstallScriptFileNameParameters'))]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('ADVMName'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('ADVMName'), variables('wadcfgxend')))]",
              "storageAccount": "[variables('diagstorageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[variables('diagstorageName')]",
              "storageAccountKey": "[listkeys(variables('diagstorageId'), '2015-05-01-preview').key1]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('adipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "adip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('ContosoAzLnxAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ContosoAzLnx1AVSet"
      },
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "false"
      }
    },
    {
      "name": "[variables('ContosoAzLnx1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "westus",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('linuxipName'))]"
      ],
      "tags": {
        "displayName": "ContosoAzLnx1Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('ContosoAzLnx1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('linuxipName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('ContosoAzLnx1Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('ContosoAzLnx1NicName'))]"
      ],
      "tags": {
        "displayName": "ContosoAzLnx1"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ContosoAzLnxAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('ContosoAzLnx1VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('ContosoAzLnx1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ContosoAzLnx1ImagePublisher')]",
            "offer": "[variables('ContosoAzLnx1ImageOffer')]",
            "sku": "[parameters('ContosoAzLnx1UbuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "ContosoAzLnx1OSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('ContosoAzLnx1StorageAccountContainerName'), '/', variables('ContosoAzLnx1OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ContosoAzLnx1NicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('WebAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ContosoAzLnx1AVSet"
      },
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "false"
      }
    },
    {
      "name": "[variables('WebNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('webipName'))]"
      ],
      "tags": {
        "displayName": "WebNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('WebSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('webipName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('WebVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diagstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('WebNicName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "tags": {
        "displayName": "ContosoWeb1"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('WebVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('WebVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('WindowsImagePublisher')]",
            "offer": "[variables('WindowsImageOffer')]",
            "sku": "[variables('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "WebOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('WebStorageAccountContainerName'), '/', variables('WebOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('WebNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "InstallCloudShop",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('WebVMName'))]"
          ],
          "tags": {
            "displayName": "InstallCloudShop"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('CloudShopInstallscriptUrl'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('CloudShopInstallScriptFileName'), ' ', variables('CloudShopInstallScriptParameters'))]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('WebVMName'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('WebVMName'), variables('wadcfgxend')))]",
              "storageAccount": "[variables('diagstorageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[variables('diagstorageName')]",
              "storageAccountKey": "[listkeys(variables('diagstorageId'), '2015-05-01-preview').key1]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('LinuxAVSet')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ContosoAzLnx1AVSet"
      },
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "false"
      }
    },
    {
      "name": "[variables('SQLNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('SQLipName'))]"
      ],
      "tags": {
        "displayName": "SQLNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SQLSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sqlipName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('SQLVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diagstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('SQLNicName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "tags": {
        "displayName": "ContosoSQL1"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('SQLVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('SQLVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('WindowsImagePublisher')]",
            "offer": "[variables('WindowsImageOffer')]",
            "sku": "[variables('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "SQLOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('SQLStorageAccountContainerName'), '/', variables('SQLOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('SQLNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "InstallCloudShop",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('SQLVMName'))]"
          ],
          "tags": {
            "displayName": "InstallCloudShopDB"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('CloudShopDBInstallscriptUrl'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('CloudShopDBInstallScriptFileName'), ' ', variables('CloudShopDBInstallScriptParameters'))]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('SQLVMName'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('SQLVMName'), variables('wadcfgxend')))]",
              "storageAccount": "[variables('diagstorageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[variables('diagstorageName')]",
              "storageAccountKey": "[listkeys(variables('diagstorageId'), '2015-05-01-preview').key1]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('webipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "webip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "name": "[variables('sqlipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "sqlip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "name": "[variables('mabipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "mabip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "name": "[variables('linuxipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "linuxip"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    }
  ],
  "outputs": {}
}
