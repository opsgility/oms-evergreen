{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "demouser",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Demo@pass123",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "vmstorageType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS"
      ]
    },
    "vmdiagstorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS"
      ]
    },
    "ADVMName": {
      "type": "string",
      "defaultValue": "ContosoADDS1",
      "minLength": 1
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "demouser",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Demo@pass123",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "ContosoRetail.com",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created"
      }
    },
    "ADInstallscriptUrl": {
      "type": "string",
      "metadata": {
        "description": "script to execute"
      },
      "defaultValue": "https://raw.githubusercontent.com/opsgility/oms-evergreen/master/script-extensions/deploy-ad-existing-forest.ps1"
    },
    "DomainJoinscriptUrl": {
      "type": "string",
      "metadata": {
        "description": "script to execute"
      },
      "defaultValue": "https://raw.githubusercontent.com/opsgility/oms-evergreen/master/script-extensions/domain-join.ps1"
    },
    "ADVMWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2016-Datacenter"
      ]
    },
    "ContosoLnx1Name": {
      "type": "string",
      "defaultValue": "ContosoLnx1",
      "minLength": 1
    },
    "ContosoLnx1UbuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.2-LTS"
      ]
    },
    "MABSServerVM1Name": {
      "type": "string",
      "defaultValue": "ContosoMABSVM1",
      "minLength": 1
    },
    "MABSServerVM1WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ]
    }
  },
  "variables": {
    "ContosoOnPremVNETName": "ContosoOnPremVNET",
    "ContosoOnPremVNETPrefix": "10.5.0.0/16",
    "ContosoOnPremVNETSubnet1Name": "ContosoAzureSubnet",
    "ContosoOnPremVNETSubnet1Prefix": "10.5.0.0/24",
    "ContosoOnPremVNETSubnet2Name": "GatewaySubnet",
    "ContosoOnPremVNETSubnet2Prefix": "10.5.1.0/29",
    "vmstorageName": "[concat('chqdisks', uniqueString(resourceGroup().id))]",
    "diagstorageName": "[concat('chqdiag', uniqueString(resourceGroup().id))]",
    "diagstorageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagstorageName'))]",
    "ADVMImagePublisher": "MicrosoftWindowsServer",
    "ADVMImageOffer": "WindowsServer",
    "ADVMOSDiskName": "ADVMOSDisk",
    "ADVMVmSize": "Standard_DS1_v2",
    "ADVMVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('ContosoOnPremVNETName'))]",
    "ADVMSubnetRef": "[concat(variables('ADVMVnetID'), '/subnets/', variables('ContosoOnPremVNETSubnet1Name'))]",
    "ADVMStorageAccountContainerName": "vhds",
    "ADVMNicName": "[concat(parameters('ADVMName'), 'NetworkInterface')]",
    "scriptFolder": ".",
    "VM1scriptFileName": "deploy-ad-existing-forest.ps1",
    "VM1scriptParameters": "[concat(' -domain ', parameters('domainName'), ' -password ', parameters('adminPassword'))]",
    "DomainJoinscriptFileName": "domain-join.ps1",
    "DomainJoinscriptParameters": "[concat(' -domain ', parameters('domainName'), ' -user ', parameters('adminUsername'), ' -password ', parameters('adminPassword'))]",
    "adipName": "adip",
    "ADAvailabilitySetName": "ContosoAzADDSAVSet",
    "LinuxAvailabilitySetName": "ContosoAzLinuxAVSet",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
    "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
    "ContosoLnx1ImagePublisher": "Canonical",
    "ContosoLnx1ImageOffer": "UbuntuServer",
    "ContosoLnx1OSDiskName": "ContosoLnx1OSDisk",
    "ContosoLnx1VmSize": "Standard_DS2_v2",
    "ContosoLnx1VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('ContosoOnPremVNETName'))]",
    "ContosoLnx1SubnetRef": "[concat(variables('ContosoLnx1VnetID'), '/subnets/', 'ContosoAzureSubnet')]",
    "ContosoLnx1StorageAccountContainerName": "vhds",
    "ContosoLnx1NicName": "[concat(parameters('ContosoLnx1Name'), 'NetworkInterface')]",
    "MABSServerVM1ImagePublisher": "MicrosoftWindowsServer",
    "MABSServerVM1ImageOffer": "WindowsServer",
    "MABSServerVM1OSDiskName": "MABSServerVM1OSDisk",
    "MABSServerVM1VmSize": "Standard_DS2_v2",
    "MABSServerVM1VnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'OPSTrainingVNET')]",
    "MABSServerVM1SubnetRef": "[concat(variables('MABSServerVM1VnetID'), '/subnets/', variables('ContosoOnPremVNETSubnet1Name'))]",
    "MABSServerVM1StorageAccountContainerName": "vhds",
    "MABSServerVM1NicName": "[concat(parameters('MABSServerVM1Name'), 'NetworkInterface')]",
    "MABSDISK1": "[concat('http://',variables('vmstorageName'),'.blob.core.windows.net/','vhds','/','dataDisk1.vhd')]",
    "MABSServerVm1-IPName": "MABSServerVm1-IP"

  },
  "resources": [
    {
      "name": "[variables('vmstorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('vmstorageType')]"
      },
      "tags": {
        "displayName": "ContosoOnPremStorageDisks"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "vmstorage"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('diagstorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('vmdiagstorageType')]"
      },
      "tags": {
        "displayName": "ContosoOnPremStorageDiagnostics"
      },
      "dependsOn": [],
      "kind": "Storage"
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('ADAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ContosoAzADDSAVSet"
      },
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "false"
      }
    },
    {
      "name": "[variables('ADVMNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('adipName'))]"
      ],
      "tags": {
        "displayName": "ADVMNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('ADVMSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adipName'))]"
              },
              "privateIPAddress": "10.5.0.15"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('ADVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('diagstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('ADVMNicName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('ADAvailabilitySetName'))]"
      ],
      "tags": {
        "displayName": "ContosoADDS1"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ADAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('ADVMVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('ADVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ADVMImagePublisher')]",
            "offer": "[variables('ADVMImageOffer')]",
            "sku": "[parameters('ADVMWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "ADVMOSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('ADVMStorageAccountContainerName'), '/', variables('ADVMOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ADVMNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "InstallAD",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('ADVMName'))]"
          ],
          "tags": {
            "displayName": "InstallAD"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('ADInstallscriptUrl'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('VM1scriptFileName'), ' ', variables('VM1scriptParameters'))]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('ADVMName'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('ADVMName'), variables('wadcfgxend')))]",
              "storageAccount": "[variables('diagstorageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[variables('diagstorageName')]",
              "storageAccountKey": "[listkeys(variables('diagstorageId'), '2015-05-01-preview').key1]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('adipName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "AD Public IP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('LinuxAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ContosoAzLinuxAVSet"
      },
      "properties": {
        "platformFaultDomainCount": "3",
        "platformUpdateDomainCount": "5",
        "managed": "false"
      }
    },
    {
      "name": "[variables('ContosoLnx1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "westus",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "ContosoLnx1Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('ContosoLnx1SubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('ContosoLnx1Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('ContosoLnx1NicName'))]"
      ],
      "tags": {
        "displayName": "ContosoLnx1"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('ContosoLnx1VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('ContosoLnx1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ContosoLnx1ImagePublisher')]",
            "offer": "[variables('ContosoLnx1ImageOffer')]",
            "sku": "[parameters('ContosoLnx1UbuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "ContosoLnx1OSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('ContosoLnx1StorageAccountContainerName'), '/', variables('ContosoLnx1OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ContosoLnx1NicName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[variables('MABSServerVM1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('MABSServerVm1-IPName'))]"
      ],
      "tags": {
        "displayName": "MABSServerVM1Nic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('MABSServerVM1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('MABSServerVm1-IPName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('MABSServerVM1Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('MABSServerVM1NicName'))]"
      ],
      "tags": {
        "displayName": "MABSServerVM1"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('MABSServerVM1VmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('MABSServerVM1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('MABSServerVM1ImagePublisher')]",
            "offer": "[variables('MABSServerVM1ImageOffer')]",
            "sku": "[parameters('MABSServerVM1WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "MABSServerVM1OSDisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vmstorageName')), '2016-01-01').primaryEndpoints.blob, variables('MABSServerVM1StorageAccountContainerName'), '/', variables('MABSServerVM1OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "1023",
              "lun": 0,
              "vhd": { "uri": "[variables('MABSDISK1')]" },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('MABSServerVM1NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "DomainJoin",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('MABSServerVM1Name'))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('ADVMName'), 'InstallAD')]"
          ],
          "tags": {
            "displayName": "DomainJoin"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('DomainJoinscriptUrl'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('DomainJoinscriptFileName'), ' ', variables('DomainJoinscriptParameters'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('MABSServerVm1-IPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "MABSServerVm1-IP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    }
  ],
  "outputs": {}
}
